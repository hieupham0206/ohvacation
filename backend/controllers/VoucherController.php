<?php

namespace backend\controllers;

use backend\models\table\VoucherTable;
use common\models\Voucher;
use common\utils\controller\Controller;
use common\utils\table\TableFacade;
use PHPExcel_IOFactory;
use Yii;
use yii\helpers\Url;
use yii\web\ForbiddenHttpException;
use yii\web\MethodNotAllowedHttpException;
use yii\web\NotFoundHttpException;
use yii\web\ServerErrorHttpException;

class VoucherController extends Controller
{
    public function beforeAction($action)
    {
        if (Yii::$app->user->identity != null && Yii::$app->user->identity->username == 'chau.bui') {
            throw new ForbiddenHttpException(Yii::t('yii', 'You are not allowed to access this page.'));
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        $voucher = new Voucher();

        return $this->render('index', ['voucher' => $voucher]);
    }

    public function actionIndexTable()
    {
        $tableFacade = new TableFacade(new VoucherTable);

        return $tableFacade->getDataTable();
    }

    public function actionView()
    {
        $voucherId = Yii::$app->request->get('id', '');
        $voucher   = $this->findModel($voucherId);

        return $this->render('view', [
            'voucher' => $voucher
        ]);
    }

    /**
     * Finds the Voucher model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * If $voucherId == '', return new Voucher.
     *
     * @param $voucherId
     *
     * @return Voucher the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($voucherId)
    {
        if (($model = Voucher::findOne(['id' => $voucherId, 'status' => 1])) !== null) {
            return $model;
        }

        throw new NotFoundHttpException(Yii::t('yii', 'Page not found.'));
    }

    public function actionCreate()
    {
        $voucher = new Voucher();

        return $this->render('create', [
            'voucher' => $voucher,
        ]);
    }

    public function actionUpdate()
    {
        $voucherId = Yii::$app->request->get('id', '');
        $voucher   = $this->findModel($voucherId);

        return $this->render('update', [
            'voucher' => $voucher
        ]);
    }

    /**
     * @return string:
     * - url: lưu thành công
     * - chuỗi: lưu thất bại, trả về lỗi
     * - An internal server error occurred: không load được model
     * @throws \yii\base\InvalidParamException
     * @throws NotFoundHttpException
     * @throws ServerErrorHttpException
     * @throws \yii\base\Exception
     * @throws \yii\db\Exception
     * @throws \yii\base\InvalidCallException
     */
    public function actionSave()
    {
        $voucherId = Yii::$app->request->post('Voucher')['id'];
        $voucher   = $voucherId != '' ? $this->findModel($voucherId) : new Voucher();

        if ($voucher->load(Yii::$app->request->post())) {
            $voucher->note = Yii::$app->request->post('Voucher')['note'];
            if ($voucher->save()) {
                return Url::to(['index'], true);
            }

            return $this->asJson($voucher->errors);
        }

        throw new ServerErrorHttpException(Yii::t('yii', 'An internal server error occurred.'));
    }

    public function actionDelete()
    {
        $voucherId = Yii::$app->request->post('id', '');
        $voucher   = Voucher::findOne(['id' => $voucherId, 'status' => 1]);

        return $voucher != null && $voucher->updateAttributes(['status' => -1]) > 0;
    }

    /**
     * Select2 ajax Voucher.
     * @return string
     * @throws \yii\base\InvalidParamException
     * @throws \yii\web\MethodNotAllowedHttpException
     */
    public function actionSelectVoucher()
    {
        if (Yii::$app->request->isAjax) {
            $query    = Yii::$app->request->get('query', '');
            $page     = Yii::$app->request->get('page', 1);
            $offset   = ($page - 1) * 10;
            $vouchers = Voucher::find()->where(['status' => 1])->andFilterWhere(['like', 'name', $query])->select(['id', 'name']);

            return $this->asJson([
                'total_count' => $vouchers->count(),
                'items'       => $vouchers->offset($offset)->limit(10)->all()
            ]);
        }

        throw new MethodNotAllowedHttpException(Yii::t('yii', 'Method Not Allowed'));
    }

    public function actionImportData()
    {
        $datas = [];

        $document = PHPExcel_IOFactory::load('C:\xampp\htdocs\oh_voucher\database\GIFT VOUCHER Q4.2016_SG.xlsx');
        // Get the active sheet as an array
        for ($k = 0; $k < 3; $k++) {
            $activeSheetData = $document->getSheet($k)->toArray(null, true, true, true);
            $arrayCount      = count($activeSheetData);

            for ($i = 4; $i <= $arrayCount; $i++) {
                $clientName = $activeSheetData[$i]['D'];
                $companion  = $activeSheetData[$i]['E'];
                $phone      = $activeSheetData[$i]['F'];
                $email      = $activeSheetData[$i]['G'];
                $code       = $activeSheetData[$i]['H'];
                $surveyCode = $activeSheetData[$i]['I'];

                $datas[] = [
                    $clientName,
                    $companion,
                    $phone,
                    $email,
                    $code,
                    $surveyCode,
                    strtotime(date('d.m.Y H:i:s')),
                    1,
                ];
            }
        }
        $document = PHPExcel_IOFactory::load('C:\xampp\htdocs\oh_voucher\database\GIFT VOUCHER Q1.2017_SG.xlsx');
        // Get the active sheet as an array
        for ($k = 0; $k < 1; $k++) {
            $activeSheetData = $document->getSheet($k)->toArray(null, true, true, true);
            $arrayCount      = count($activeSheetData);

            for ($i = 4; $i <= $arrayCount; $i++) {
                $clientName = $activeSheetData[$i]['D'];
                $companion  = $activeSheetData[$i]['E'];
                $phone      = $activeSheetData[$i]['F'];
                $email      = $activeSheetData[$i]['G'];
                $code       = $activeSheetData[$i]['H'];
                $surveyCode = $activeSheetData[$i]['I'];

                $datas[] = [
                    $clientName,
                    $companion,
                    $phone,
                    $email,
                    $code,
                    $surveyCode,
                    strtotime(date('d.m.Y H:i:s')),
                    1,
                ];
            }
        }
        $document = PHPExcel_IOFactory::load('C:\xampp\htdocs\oh_voucher\database\GIFT VOUCHER_Q2_2017 SGN NON MEMBER.xlsx');
        // Get the active sheet as an array
        for ($k = 0; $k < 3; $k++) {
            $activeSheetData = $document->getSheet($k)->toArray(null, true, true, true);
            $arrayCount      = count($activeSheetData);

            for ($i = 4; $i <= $arrayCount; $i++) {
                $clientName = $activeSheetData[$i]['D'];
                $companion  = $activeSheetData[$i]['E'];
                $phone      = $activeSheetData[$i]['F'];
                $email      = $activeSheetData[$i]['G'];
                $code       = $activeSheetData[$i]['H'];
                $surveyCode = $activeSheetData[$i]['I'];

                $datas[] = [
                    $clientName,
                    $companion,
                    $phone,
                    $email,
                    $code,
                    $surveyCode,
                    strtotime(date('d.m.Y H:i:s')),
                    1,
                ];
            }
        }
        $document = PHPExcel_IOFactory::load('C:\xampp\htdocs\oh_voucher\database\GIFT VOUCHER Q4.2016_HN.xlsx');
        // Get the active sheet as an array
        for ($k = 0; $k < 3; $k++) {
            $activeSheetData = $document->getSheet($k)->toArray(null, true, true, true);
            $arrayCount      = count($activeSheetData);

            for ($i = 4; $i <= $arrayCount; $i++) {
                $clientName = $activeSheetData[$i]['D'];
                $companion  = $activeSheetData[$i]['E'];
                $phone      = $activeSheetData[$i]['F'];
                $email      = $activeSheetData[$i]['G'];
                $code       = $activeSheetData[$i]['H'];
                $surveyCode = $activeSheetData[$i]['I'];

                $datas[] = [
                    $clientName,
                    $companion,
                    $phone,
                    $email,
                    $code,
                    $surveyCode,
                    strtotime(date('d.m.Y H:i:s')),
                    1,
                ];
            }
        }
        $document = PHPExcel_IOFactory::load('C:\xampp\htdocs\oh_voucher\database\GIFT VOUCHER Q1.2017_HN (1).xlsx');
        // Get the active sheet as an array
        for ($k = 0; $k < 3; $k++) {
            $activeSheetData = $document->getSheet($k)->toArray(null, true, true, true);
            $arrayCount      = count($activeSheetData);

            for ($i = 4; $i <= $arrayCount; $i++) {
                $clientName = $activeSheetData[$i]['D'];
                $companion  = $activeSheetData[$i]['E'];
                $phone      = $activeSheetData[$i]['F'];
                $email      = $activeSheetData[$i]['G'];
                $code       = $activeSheetData[$i]['H'];
                $surveyCode = $activeSheetData[$i]['I'];

                $datas[] = [
                    $clientName,
                    $companion,
                    $phone,
                    $email,
                    $code,
                    $surveyCode,
                    strtotime(date('d.m.Y H:i:s')),
                    1,
                ];
            }
        }
        $document = PHPExcel_IOFactory::load('C:\xampp\htdocs\oh_voucher\database\GIFT VOUCHER Q2.2017_HN.xlsx');
        // Get the active sheet as an array
        for ($k = 0; $k < 3; $k++) {
            $activeSheetData = $document->getSheet($k)->toArray(null, true, true, true);
            $arrayCount      = count($activeSheetData);

            for ($i = 4; $i <= $arrayCount; $i++) {
                $idx = $activeSheetData[$i]['A'];
                if ($idx != '') {
                    $clientName = $activeSheetData[$i]['D'];
                    $companion  = $activeSheetData[$i]['E'];
                    $phone      = $activeSheetData[$i]['F'];
                    $email      = $activeSheetData[$i]['G'];
                    $code       = $activeSheetData[$i]['H'];
                    $surveyCode = $activeSheetData[$i]['I'];

                    $datas[] = [
                        $clientName,
                        $companion,
                        $phone,
                        $email,
                        $code,
                        $surveyCode,
                        strtotime(date('d.m.Y H:i:s')),
                        1,
                    ];
                }
            }
        }

        return Yii::$app->db->createCommand()
                            ->batchInsert(Voucher::tableName(), [
                                'client_name',
                                'companion',
                                'phone',
                                'email',
                                'code',
                                'survey_code',
                                'created_date',
                                'created_by',
                            ], $datas)
                            ->execute();
    }

    public function actionModalImport()
    {
        return $this->renderPartial('_form_import');
    }

    public function actionImportVoucher()
    {
        if (isset($_FILES)) {
            $datas    = [];
            $document = PHPExcel_IOFactory::load($_FILES['file']['tmp_name']);
            $voucherType = Yii::$app->request->post('voucher_type', 1);

            // Get the active sheet as an array
            $activeSheetData = $document->getActiveSheet()->toArray(null, true, true, true);
            $arrayCount      = count($activeSheetData);

            for ($i = 3; $i <= $arrayCount; $i++) {
                $code        = trim($activeSheetData[$i]['H']);
                $voucherCode = Voucher::find()->where(['code' => $code])->one();
                if ($code != '' && $voucherCode == null) {
                    $clientName = $activeSheetData[$i]['D'];
                    $companion  = $activeSheetData[$i]['E'];
                    $phone      = $activeSheetData[$i]['F'];
                    $email      = $activeSheetData[$i]['G'];
                    $surveyCode = $activeSheetData[$i]['I'];

                    $datas[] = [
                        $clientName,
                        $companion,
                        $phone,
                        $email,
                        $code,
                        $surveyCode,
                        strtotime(date('d.m.Y H:i:s')),
                        Yii::$app->user->id,
                        $voucherType
                    ];
                }
            }

            return Yii::$app->db->createCommand()
                                ->batchInsert(Voucher::tableName(), [
                                    'client_name',
                                    'companion',
                                    'phone',
                                    'email',
                                    'code',
                                    'survey_code',
                                    'created_date',
                                    'created_by',
                                    'voucher_type',
                                ], $datas)
                                ->execute() > 0 ? 'success' : 'fail';
        }

        return 'no_file';
    }

    public function actionAddNote()
    {
        Yii::$app->cache->flush();
        return Yii::$app->db->createCommand("ALTER TABLE `voucher` ADD `note` TEXT NULL AFTER `code`")->execute();
    }
}
